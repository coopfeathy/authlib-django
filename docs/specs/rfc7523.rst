.. _specs/rfc7523:

JWT Profile for OAuth 2.0 Client Authentication and Authorization Grants
========================================================================

.. meta::
    :description: API references on RFC7523 JWT Bearer Grant of Python
        implementation, guide on how to create a server that support
        JWT profile for OAuth 2.0 client authentication and authorization
        grants.

This section contains the generic Python implementation of RFC7523_.

.. _RFC7523: https://tools.ietf.org/html/rfc7523

.. module:: authlib.specs.rfc7523


Using JWTs as Authorization Grants
----------------------------------

JWT Profile for OAuth 2.0 Authorization Grants works in the same way with
:ref:`RFC6749 <specs/rfc6749>` built-in grants. Which means it can be
registered with :meth:`~authlib.specs.rfc6749.AuthorizationServer.register_grant`.

The base class is :class:`JWTBearerGrant`, you need to implement the missing
methods in order to use it. Here is an example::

    from authlib.specs.rfc7519 import jwk
    from authlib.specs.rfc7523 import JWTBearerGrant as _JWTBearerGrant

    class JWTBearerGrant(_JWTBearerGrant):
        def authenticate_user(self, claims):
            # get user from claims info, usually it is claims['sub']
            # for anonymous user, return None
            return None

        def authenticate_client(self, claims):
            # get client from claims, usually it is claims['iss']
            # since the assertion JWT is generated by this client
            return get_client_by_iss(claims['iss'])

        def resolve_public_key(self, headers, payload):
            # get public key to decode the assertion JWT
            jwk_set = get_client_public_keys(claims['iss'])
            return jwk.loads(jwk_set, header.get('kid'))

    # register grant to authorization server
    authorization_server.register_grant(JWTBearerGrant)

When creating a client, authorization server will generate several key pairs.
The server itself can only keep the public keys, which will be used to decode
assertion value.

API Reference
-------------

.. autoclass:: JWTBearerGrant
    :member-order: bysource
    :members:
